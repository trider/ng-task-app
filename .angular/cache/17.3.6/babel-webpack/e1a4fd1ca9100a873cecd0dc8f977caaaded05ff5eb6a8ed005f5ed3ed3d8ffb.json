{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { changeBodyAttribute, getLayoutConfig } from '../../shared/helper/utils';\nlet VerticalLayoutComponent = class VerticalLayoutComponent {\n  constructor(eventService, memberService) {\n    this.eventService = eventService;\n    this.memberService = memberService;\n    this.layoutWidth = '';\n    this.memberData = null;\n    this.textDir = 'ltr';\n    this.menuPosition = \"\";\n    this.leftSidebarTheme = \"\";\n    this.leftSidebarType = \"\";\n    this.topbarTheme = \"\";\n    this.showSidebarUserInfo = false;\n    this.reRender = true;\n    /**\n     * controls re-rendering\n     */\n    this._setRerender = () => {\n      this.reRender = false;\n      setTimeout(() => {\n        this.reRender = true;\n      }, 20);\n    };\n    this.memberData = this.memberService.getMemberData();\n    if (this.memberData !== null && this.memberData.languageId === 5) this.textDir = 'rtl';\n  }\n  ngOnInit() {\n    let config = getLayoutConfig('vertical');\n    this.menuPosition = config.menuPosition;\n    this.leftSidebarTheme = config.leftSidebarTheme;\n    this.leftSidebarType = config.leftSidebarType;\n    this.topbarTheme = config.topbarTheme;\n    this.showSidebarUserInfo = config.showSidebarUserInfo;\n    // listen to event and change the layout configuarations\n    this.eventService.subscribe('changeMenuPosition', position => {\n      this.menuPosition = position;\n    });\n    this.eventService.subscribe('changeLeftSidebarTheme', theme => {\n      this.leftSidebarTheme = theme;\n    });\n    this.eventService.subscribe('changeLeftSidebarType', type => {\n      this.leftSidebarType = type;\n    });\n    this.eventService.subscribe('changeTopbarTheme', theme => {\n      this.topbarTheme = theme;\n    });\n    this.eventService.subscribe('toggleLeftSidebarUserInfo', show => {\n      this.showSidebarUserInfo = show;\n    });\n    this.changeLayoutConfig();\n  }\n  ngAfterViewInit() {\n    changeBodyAttribute('data-layout-mode', '', 'remove');\n  }\n  /**\n  * changes layout configurations\n  */\n  ngOnChanges(changes) {\n    this._setRerender();\n    this.changeLayoutConfig();\n  }\n  ngDoCheck() {\n    this.changeLayoutConfig();\n  }\n  /**\n  * changes layout related options\n  */\n  changeLayoutConfig() {\n    // boxed vs fluid\n    changeBodyAttribute('data-layout-width', this.layoutWidth);\n    // scrollable menus\n    changeBodyAttribute('data-layout-menu-position', this.menuPosition);\n    // left sidebar theme\n    changeBodyAttribute('data-sidebar-color', this.leftSidebarTheme);\n    // left sidebar type\n    changeBodyAttribute('data-sidebar-size', this.leftSidebarType);\n    // topbar theme\n    changeBodyAttribute('data-topbar-color', this.topbarTheme);\n  }\n  /**\n  * on settings button clicked from topbar\n  */\n  onSettingsButtonClicked() {\n    this.eventService.broadcast('showRightSideBar');\n  }\n  /**\n   * On mobile toggle button clicked\n   */\n  onToggleMobileMenu() {\n    document.body.classList.toggle('sidebar-enable');\n  }\n};\n__decorate([Input()], VerticalLayoutComponent.prototype, \"layoutWidth\", void 0);\n__decorate([Input()], VerticalLayoutComponent.prototype, \"memberData\", void 0);\nVerticalLayoutComponent = __decorate([Component({\n  selector: 'app-vertical-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})], VerticalLayoutComponent);\nexport { VerticalLayoutComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}