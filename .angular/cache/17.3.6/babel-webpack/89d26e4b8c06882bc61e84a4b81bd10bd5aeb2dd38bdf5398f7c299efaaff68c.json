{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction NavMenuVaultComponent_a_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function NavMenuVaultComponent_a_0_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openStandardModal());\n    });\n    i0.ɵɵelement(1, \"i\", 2);\n    i0.ɵɵelementEnd();\n  }\n}\nexport let NavMenuVaultComponent = /*#__PURE__*/(() => {\n  class NavMenuVaultComponent {\n    constructor() {}\n    ngOnInit() {}\n    getMemberDlt() {\n      this.qry = this.apollo.watchQuery({\n        query: InStateRead,\n        pollInterval: 60000,\n        context: {\n          headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            Authorization: this.memberData.token,\n            token: this.memberData.token\n          })\n        },\n        variables: {\n          key: this.memberData.token,\n          role: this.memberData.role,\n          command: \"getMemberDltWallet\",\n          payload: {\n            memberId: this.memberData.member,\n            projectName: \"instate\",\n            isSummary: true\n          }\n        }\n      });\n      this.querySubscription = this.qry.valueChanges.subscribe(({\n        data,\n        loading\n      }) => {\n        setTimeout(() => {\n          this.loggerService.logData(false, 'topBarDlt', data);\n          this.loading = false;\n          this.account = data.inStateRead;\n        });\n      }, error => {\n        this.loggerService.logData(false, 'quotesErr', error);\n        // this.qry.refetch()\n      });\n    }\n    openStandardModal() {\n      let dialogRef = this.dialog.open(StandardModalComponent, {\n        minWidth: 1200,\n        minHeight: 200,\n        disableClose: false,\n        data: {\n          controlType: 'dlt',\n          displayType: 'fees',\n          title: 'Fees',\n          isDlt: true,\n          account: this.account\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {});\n    }\n    ngOnDestroy() {\n      // this.querySubscription.unsubscribe();\n    }\n    static #_ = this.ɵfac = function NavMenuVaultComponent_Factory(t) {\n      return new (t || NavMenuVaultComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavMenuVaultComponent,\n      selectors: [[\"app-nav-menu-vault\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"nav-link right-bar-toggle\", 3, \"click\", 4, \"ngIf\"], [1, \"nav-link\", \"right-bar-toggle\", 3, \"click\"], [1, \"mdi\", \"mdi-safe-square\", \"mdi-24px\"]],\n      template: function NavMenuVaultComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, NavMenuVaultComponent_a_0_Template, 2, 0, \"a\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.account);\n        }\n      },\n      dependencies: [i1.NgIf]\n    });\n  }\n  return NavMenuVaultComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}