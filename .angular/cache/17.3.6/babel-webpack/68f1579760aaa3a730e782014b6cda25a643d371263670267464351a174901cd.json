{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LAYOUT_DETACHED, LAYOUT_HORIZONTAL, LAYOUT_TWO_COLUMN_MENU, LAYOUT_VERTICAL, LAYOUT_WIDTH_BOXED, LEFT_SIDEBAR_TYPE_CONDENSED, LEFT_SIDEBAR_TYPE_DEFAULT } from './shared/config/layout.model';\nimport { getLayoutConfig } from './shared/helper/utils';\nlet LayoutContainerComponent = class LayoutContainerComponent {\n  constructor(eventService) {\n    this.eventService = eventService;\n    this.configuredDemo = \"default\";\n    this.memberData = null;\n  }\n  ngOnInit() {\n    // default settings\n    this.configuredDemo = environment.demo;\n    // tslint:disable-next-line: max-line-length\n    this.layoutType = this.configuredDemo === 'creative' ? LAYOUT_HORIZONTAL : this.configuredDemo === 'modern' ? LAYOUT_DETACHED : this.configuredDemo === 'saas' ? LAYOUT_TWO_COLUMN_MENU : LAYOUT_VERTICAL;\n    // listen to event and change the layout configuarations\n    this.eventService.subscribe('changeLayout', layout => {\n      this.layoutType = layout;\n      this.setLayoutConfig();\n    });\n    this.eventService.subscribe('changeLayoutWidth', width => {\n      setTimeout(() => {\n        this.layoutWidth = width;\n        if (this.layoutWidth === LAYOUT_WIDTH_BOXED) {\n          this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_CONDENSED);\n        } else {\n          this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_DEFAULT);\n        }\n      }, 20);\n    });\n    this.updateDimensions();\n  }\n  ngAfterViewInit() {\n    document.body.classList.remove('authentication-bg', 'authentication-bg-pattern', 'auth-fluid-pages', 'pb-0');\n  }\n  /**\n   * set layout config\n   */\n  setLayoutConfig() {\n    this.layoutConfig = getLayoutConfig(this.layoutType);\n    this.layoutWidth = this.layoutConfig.layoutWidth;\n  }\n  /**\n  * changes left sidebar type based on screen dimensions\n  */\n  updateDimensions() {\n    if (this.layoutType !== LAYOUT_TWO_COLUMN_MENU) {\n      if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n        this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_CONDENSED);\n      } else if (window.innerWidth > 1028) {\n        this.eventService.broadcast('changeLeftSidebarType', LEFT_SIDEBAR_TYPE_DEFAULT);\n      }\n    }\n  }\n  /**\n   * Check if the vertical layout is requested\n   */\n  isVerticalLayoutRequested() {\n    // return this.layoutType === LAYOUT_VERTICAL;\n    return this.layoutType === LAYOUT_VERTICAL;\n  }\n  /**\n   * Check if the horizontal layout is requested\n   */\n  isHorizontalLayoutRequested() {\n    return this.layoutType === LAYOUT_HORIZONTAL;\n  }\n  /**\n   * Check if the detached layout is requested\n   */\n  isDetachedLayoutRequested() {\n    return this.layoutType === LAYOUT_DETACHED;\n  }\n  /**\n   * Check if two column layout is requested\n   */\n  isTwoColumnMenuLayoutRequested() {\n    return this.layoutType === LAYOUT_TWO_COLUMN_MENU;\n  }\n};\nLayoutContainerComponent = __decorate([Component({\n  selector: 'app-layout-container',\n  templateUrl: './layout-container.component.html',\n  styleUrls: ['./layout-container.component.scss']\n})], LayoutContainerComponent);\nexport { LayoutContainerComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}