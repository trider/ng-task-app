{"ast":null,"code":"import { Injectable, NgModule, Pipe } from '@angular/core';\nclass Ng2SearchPipe {\n  /**\n   * @param {?} items object from array\n   * @param {?} term term's search\n   * @return {?}\n   */\n  transform(items, term) {\n    if (!term || !items) return items;\n    return Ng2SearchPipe.filter(items, term);\n  }\n  /**\n   *\n   * @param {?} items List of items to filter\n   * @param {?} term  a string term to compare with every property of the list\n   *\n   * @return {?}\n   */\n  static filter(items, term) {\n    const /** @type {?} */toCompare = term.toLowerCase();\n    /**\n     * @param {?} item\n     * @param {?} term\n     * @return {?}\n     */\n    function checkInside(item, term) {\n      for (let /** @type {?} */property in item) {\n        if (item[property] === null || item[property] == undefined) {\n          continue;\n        }\n        if (typeof item[property] === 'object') {\n          if (checkInside(item[property], term)) {\n            return true;\n          }\n        }\n        if (item[property].toString().toLowerCase().includes(toCompare)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return items.filter(function (item) {\n      return checkInside(item, term);\n    });\n  }\n}\n\n/**\n * @nocollapse\n */\n\nclass Ng2SearchPipeModule {}\n\n/**\n * @nocollapse\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}