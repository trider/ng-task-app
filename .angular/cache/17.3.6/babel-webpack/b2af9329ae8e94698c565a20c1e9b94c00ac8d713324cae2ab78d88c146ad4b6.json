{"ast":null,"code":"import { LAYOUT_DETACHED, LAYOUT_HORIZONTAL, LAYOUT_TWO_COLUMN_MENU, LAYOUT_WIDTH_FLUID, LEFT_SIDEBAR_THEME_LIGHT, LEFT_SIDEBAR_TYPE_DEFAULT, MENU_POSITION_FIXED, TOPBAR_THEME_DARK, TOPBAR_THEME_LIGHT } from \"../config/layout.model\";\n/**\n * finds all parents of selected menuitem\n * @param menuItems list of menus\n * @param menuItem selected menu\n * @returns list of all parent menus of menuitem\n */\nconst findAllParent = (menuItems, menuItem) => {\n  let parents = [];\n  const parent = findMenuItem(menuItems, menuItem['parentKey']);\n  if (parent) {\n    parents.push(parent['key']);\n    if (parent['parentKey']) parents = [...parents, ...findAllParent(menuItems, parent)];\n  }\n  return parents;\n};\n/**\n * finds menuitem\n * @param menuItems list of menus\n * @param menuItemKey key to be matched\n * @returns menuitem that has menuItemKey\n */\nconst findMenuItem = (menuItems, menuItemKey) => {\n  if (menuItems && menuItemKey) {\n    for (var i = 0; i < menuItems.length; i++) {\n      if (menuItems[i].key === menuItemKey) {\n        return menuItems[i];\n      }\n      var found = findMenuItem(menuItems[i].children, menuItemKey);\n      if (found) return found;\n    }\n  }\n  return null;\n};\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute, value, action = 'set') => {\n  switch (action) {\n    case 'remove':\n      if (document.body) {\n        if (document.body.hasAttribute(attribute)) {\n          document.body.removeAttribute(attribute);\n        }\n      }\n      break;\n    default:\n      if (document.body) document.body.setAttribute(attribute, value);\n      break;\n  }\n};\n/**\n * returns configurations based on layout type\n * @param layoutType layout type\n */\nconst getLayoutConfig = layoutType => {\n  let config = {\n    layoutWidth: LAYOUT_WIDTH_FLUID,\n    menuPosition: MENU_POSITION_FIXED,\n    leftSidebarTheme: LEFT_SIDEBAR_THEME_LIGHT,\n    leftSidebarType: LEFT_SIDEBAR_TYPE_DEFAULT,\n    topbarTheme: TOPBAR_THEME_DARK,\n    showSidebarUserInfo: false\n  };\n  switch (layoutType) {\n    case LAYOUT_HORIZONTAL:\n      return config;\n    case LAYOUT_DETACHED:\n      config.showSidebarUserInfo = true;\n      return config;\n    case LAYOUT_TWO_COLUMN_MENU:\n      config.topbarTheme = TOPBAR_THEME_LIGHT;\n      return config;\n    default:\n      return config;\n  }\n};\nexport { findAllParent, findMenuItem, changeBodyAttribute, getLayoutConfig };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}