{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { InStateRead } from 'src/app/services/instate/schema/query';\nimport { StandardModalComponent } from 'src/app/components/dialogs/modals/standard-modal/standard-modal.component';\nlet NavMenuVaultComponent = class NavMenuVaultComponent {\n  constructor(apollo, loggerService, dialog, operatorService) {\n    this.apollo = apollo;\n    this.loggerService = loggerService;\n    this.dialog = dialog;\n    this.operatorService = operatorService;\n    this.operatorData = null;\n    this.memberData = null;\n    this.accounts = null;\n    this.account = null;\n    this.loading = false;\n    this.httpOptions = null;\n    this.operatorData = this.operatorService.getOperatorData();\n  }\n  ngOnInit() {\n    this.qryMember = this.apollo.watchQuery({\n      query: InStateRead,\n      context: this.httpOptions,\n      variables: {\n        key: this.operatorData.token,\n        role: 'member',\n        command: \"getMember\",\n        payload: {\n          memberId: 'member_fee_receiver'\n        }\n      }\n    });\n    this.querySubscriptionMember = this.qryMember.valueChanges.subscribe(({\n      data,\n      loading\n    }) => {\n      setTimeout(() => {\n        this.memberData = data.inStateRead;\n        if (this.memberData !== null) this.getMemberDlt();\n      });\n    }, error => {\n      this.loggerService.logData(false, 'LoginComponent:getMemberDataErr', error);\n    });\n  }\n  getMemberDlt() {\n    this.qry = this.apollo.watchQuery({\n      query: InStateRead,\n      pollInterval: 60000,\n      context: {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          Authorization: this.memberData.token,\n          token: this.memberData.token\n        })\n      },\n      variables: {\n        key: this.memberData.token,\n        role: this.memberData.role,\n        command: \"getMemberDltWallet\",\n        payload: {\n          memberId: this.memberData.member,\n          projectName: \"instate\",\n          isSummary: true\n        }\n      }\n    });\n    this.querySubscription = this.qry.valueChanges.subscribe(({\n      data,\n      loading\n    }) => {\n      setTimeout(() => {\n        this.loggerService.logData(false, 'topBarDlt', data);\n        this.loading = false;\n        this.account = data.inStateRead;\n      });\n    }, error => {\n      this.loggerService.logData(false, 'quotesErr', error);\n      // this.qry.refetch()\n    });\n  }\n  openStandardModal() {\n    let dialogRef = this.dialog.open(StandardModalComponent, {\n      minWidth: 1200,\n      minHeight: 200,\n      disableClose: false,\n      data: {\n        controlType: 'dlt',\n        displayType: 'fees',\n        title: 'Fees',\n        isDlt: true,\n        account: this.account\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  ngOnDestroy() {\n    // this.querySubscription.unsubscribe();\n  }\n};\n__decorate([Input()], NavMenuVaultComponent.prototype, \"operatorData\", void 0);\nNavMenuVaultComponent = __decorate([Component({\n  selector: 'app-nav-menu-vault',\n  templateUrl: './nav-menu-vault.component.html',\n  styleUrls: ['./nav-menu-vault.component.scss']\n})], NavMenuVaultComponent);\nexport { NavMenuVaultComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}